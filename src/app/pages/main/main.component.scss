@use "sass:math";

@import url(https://fonts.googleapis.com/css?family=Montserrat);

// ------------- MIXINS ------------- //
@mixin transition($time, $property: all, $easing: ease-in) {
  transition: $property $time $easing;
}

// ------------- VARIABLES ------------- //
$parallax-offset: 30vh;
$content-offset: 40vh;
$transition-speed: 1.2s;
$slide-number: 2;

html, body{
  overflow: hidden;
}

.navigation-arrow {
  z-index: 999;
  font-size: 3em;
  text-align: center;
  opacity: 50%;
  position: absolute;
  @media only screen and (max-width: 1000px) {
    bottom: 20%;
  }
  bottom: 14%;
  width: 100%;
  cursor: pointer;
}

.background {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  overflow: hidden;
  will-change: transform;
  backface-visibility: hidden;
  height: 100vh + $parallax-offset;
  position: fixed;
  width: 100%;
  transform: translateY($parallax-offset);
  @include transition($transition-speed, all, cubic-bezier(0.22, 0.44, 0, 1));

  &:before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .3);
  }

  &:first-child {
    @media (max-width: 1000px) {
      background-image: url(../../../assets/bg1_small.jpg);
    }
    @media (min-width: 1000px) {
      background-image: url(../../../assets/bg1.jpg);
    }
    transform: translateY(math.div(-$parallax-offset, 2));

    .content-wrapper {
      transform: translateY(math.div($parallax-offset, 2));
    }
  }

  &:nth-child(2) {
    @media (max-width: 1000px) {
      background-image: url(../../../assets/bg2_small.jpg);
    }
    @media (min-width: 1000px) {
      background-image: url(../../../assets/bg2.jpg);
    }
  }

  &:last-child {
    background-color: black;
  }
}

/* Set stacking context of slides */
@for $i from 1 to ($slide-number + 1) {
  .background:nth-child(#{$i}) {
    z-index: ($slide-number + 1) - $i;
  }
}

.content {
  &-wrapper {
    height: 100vh;
    display: flex;
    justify-content: center;
    text-align: center;
    flex-flow: column nowrap;
    color: #fff;
    font-family: Montserrat, monospace;
    text-transform: uppercase;
    transform: translateY($content-offset);
    will-change: transform;
    backface-visibility: hidden;
    @include transition($transition-speed + .5, all, cubic-bezier(0.22, 0.44, 0, 1));
  }

  &-title {
    font-size: 12vh;
    line-height: 1.4;
  }
}

// ------------- SET TRANSFORM VALUES ------------- //

.background.up-scroll {
  transform: translate3d(0, math.div(-$parallax-offset, 2), 0);

  .content-wrapper {
    transform: translateY(math.div($parallax-offset, 2));
  }

  + .background {
    transform: translate3d(0, $parallax-offset, 0);

    .content-wrapper {
      transform: translateY($parallax-offset);
    }
  }
}

.background.down-scroll {
  transform: translate3d(0, -(100vh + $parallax-offset), 0);

  .content-wrapper {
    transform: translateY($content-offset);
  }

  + .background:not(.down-scroll) {
    transform: translate3d(0, math.div(-$parallax-offset, 2), 0);

    .content-wrapper {
      transform: translateY(math.div($parallax-offset, 2));
    }
  }
}

/*fadeIn from black*/
@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@-moz-keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@-webkit-keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@-o-keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
